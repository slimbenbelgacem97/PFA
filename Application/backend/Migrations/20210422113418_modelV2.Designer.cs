// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;
using backend.Data;

namespace backend.Migrations
{
    [DbContext(typeof(ModelContextV2))]
    [Migration("20210422113418_modelV2")]
    partial class modelV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.2.21154.2");

            modelBuilder.Entity("backend.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEmb")
                        .HasColumnType("TEXT");

                    b.Property<short>("Fonction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Salaire")
                        .HasColumnType("REAL");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("backend.Models.Agent_Vehicule", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Immatricule")
                        .HasColumnType("TEXT");

                    b.HasKey("AgentId", "Immatricule");

                    b.HasIndex("Immatricule");

                    b.ToTable("Agents_Vehicules");
                });

            modelBuilder.Entity("backend.Models.Candidate", b =>
                {
                    b.Property<int>("CandidatCIN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExamConvocation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Naissance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CandidatCIN");

                    b.HasIndex("ExamConvocation");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("backend.Models.Exam", b =>
                {
                    b.Property<string>("Convocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("CandidatCIN")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CandidatCIN1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateExam")
                        .HasColumnType("TEXT");

                    b.Property<string>("List")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Convocation");

                    b.HasIndex("CandidatCIN1");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("backend.Models.LoginAgent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("AgentId");

                    b.ToTable("LoginAgents");
                });

            modelBuilder.Entity("backend.Models.Seance", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CandidatCIN")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateSeance")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeanceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("AgentId", "CandidatCIN", "DateSeance");

                    b.HasIndex("CandidatCIN");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("backend.Models.Vehicule", b =>
                {
                    b.Property<string>("Immatricule")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCirculation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marque")
                        .HasColumnType("TEXT");

                    b.HasKey("Immatricule");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("backend.Models.Agent_Vehicule", b =>
                {
                    b.HasOne("backend.Models.Agent", "Agent")
                        .WithMany("Vehicules")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Vehicule", "Vehicle")
                        .WithMany("Agents")
                        .HasForeignKey("Immatricule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("backend.Models.Candidate", b =>
                {
                    b.HasOne("backend.Models.Exam", null)
                        .WithMany("Candidates")
                        .HasForeignKey("ExamConvocation");
                });

            modelBuilder.Entity("backend.Models.Exam", b =>
                {
                    b.HasOne("backend.Models.Candidate", "Candidat")
                        .WithMany()
                        .HasForeignKey("CandidatCIN1");

                    b.Navigation("Candidat");
                });

            modelBuilder.Entity("backend.Models.Seance", b =>
                {
                    b.HasOne("backend.Models.Agent", "Agent")
                        .WithMany("Seances")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Candidate", "Candidate")
                        .WithMany("Seances")
                        .HasForeignKey("CandidatCIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("backend.Models.Agent", b =>
                {
                    b.Navigation("Seances");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("backend.Models.Candidate", b =>
                {
                    b.Navigation("Seances");
                });

            modelBuilder.Entity("backend.Models.Exam", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("backend.Models.Vehicule", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
